version: '3.8'
services:

  #PHP Service
  php: 
    build:
      context: .
      target: php
      args:
        - APP_ENV=${APP_ENV}
    environment:
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    working_dir: /var/www
    restart: always
    volumes:
      - ./:/var/www
    ports:
      - 8000:8000
        #depends_on:
      #   - database
      # - redis

  #Node
  node:
    build:
      context: .
      target: node
    volumes:
      - .:/usr/src
      - ./node_modules:/usr/src/node_modules
    restart: always

  #Database Server
  # database:
  # image: mysql:8.0
  # ports:
  #   - 3306:3306
  # environment:
  #   - MYSQL_DATABASE=${DB_DATABASE}
  #   - MYSQL_USER=${DB_USERNAME}
  #   - MYSQL_PASSWORD=${DB_PASSWORD}
  #   - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
  # volumes:
  #   - db-data:/var/lib/mysql
   # restart: always

  # Redis Server
  # redis:
  #   image: redis:alpine
  #   command: redis-server --appendonly yes --requirepass  "${REDIS_PASSWORD}"
  #   ports:
  #     - 6379:6379
  phpmyadmin:
    image: phpmyadmin:latest
    ports:
      - "8082:80"
    environment:
      PMA_HOST: ${DB_HOST}
    restart: always

  # rediscommander:
  #   image: rediscommander/redis-commander
  #   ports:
  #     - 8081:8081
  #   environment:
  #     - REDIS_HOST=redis
  #Queue Server
  # queue:
  #   build:
  #     context: .
  #     target: php
  #     args:
  #       - APP_ENV=${APP_ENV}
  #   environment:
  #     - APP_ENV=${APP_ENV}
  #     - CONTAINER_ROLE=queue
  #   working_dir: /var/www
  #   volumes:
  #     - ./:/var/www

  # websocket: 
  #   build:
  #     context: .
  #     target: php
  #     args:
  #       - APP_ENV=${APP_ENV}
  #   environment:
  #     - APP_ENV=${APP_ENV}
  #     - CONTAINER_ROLE=websocket
  #   working_dir: /var/www
  #   volumes:
  #     - ./:/var/www
  #   ports:
  #     - 6001:6001
  #   depends_on:
  #     - database
  #     - redis



volumes:
  db-data: ~
